syntax = "proto3";

package lebai.modbus;

import "google/protobuf/empty.proto";
import "db.proto";

// Modbus设备类型
enum ModbusKind {
  // 机箱IO
  ROBOT = 0;
  // 法兰IO
  FLANGE = 1;
  // 拓展IO
  EXTRA = 2;
  // 法兰ModBus
  MODBUS_FLANGE = 3;
  // ModBus RTU
  MODBUS_RTU = 4;
  // ModBus TCP
  MODBUS_TCP = 5;
}

// Modbus设备
message Modbus {
  // 类型
  ModbusKind kind = 12;
  // IP地址 或 串口地址
  string address = 13;
  // TCP端口号 或 串口波特率
  uint32 port = 14;
  // ModBus从机地址
  uint32 slave_id = 15 [json_name = "slave_id"];
}
message SaveModbusRequest {
  string name = 1;
  Modbus data = 2;
}

// Modbus寄存器类型
enum ModbusRegisterKind {
  // DI
  DISCRETE_INPUT = 0;
  // DO
  COIL = 1;
  // AI
  INPUT_REGISTER = 2;
  // AO
  HOLDING_REGISTER = 3;
}

// Modbus寄存器
message ModbusRegister {
  ModbusRegisterKind kind = 12;
  // ModBus内存地址
  uint32 address = 13;
}
message SaveModbusRegisterRequest {
  string device = 1;
  string name = 2;
  ModbusRegister data = 11;
}
message LoadModbusRegisterRequest {
  string device = 1;
  string name = 2;
}
message LoadModbusRegisterListRequest {
  string device = 1;
}

message SetCoilRequest {
  string device = 1;
  string pin = 2;
  bool value = 11;
}
message SetCoilsRequest {
  string device = 1;
  string pin = 2;
  repeated bool values = 11;
}
message GetCoilRequest {
  string device = 1;
  string pin = 2;
}
message GetCoilResponse {
  bool value = 11;
}
message GetCoilsRequest {
  string device = 1;
  string pin = 2;
  uint32 count = 11;
}
message GetCoilsResponse {
  repeated bool values = 11;
}

message SetRegisterRequest {
  string device = 1;
  string pin = 2;
  uint32 value = 11;
}
message SetRegistersRequest {
  string device = 1;
  string pin = 2;
  repeated uint32 values = 11;
}
message GetRegisterRequest {
  string device = 1;
  string pin = 2;
}
message GetRegisterResponse {
  uint32 value = 11;
}
message GetRegistersRequest {
  string device = 1;
  string pin = 2;
  uint32 count = 11;
}
message GetRegistersResponse {
  repeated uint32 values = 11;
}

// Modbus相关服务
service ModbusService {
  // 保存Modbus设备
  rpc SaveModbus(SaveModbusRequest) returns (google.protobuf.Empty);
  // 查询Modbus设备
  rpc LoadModbus(db.LoadRequest) returns (Modbus);
  // 查询Modbus设备列表
  rpc LoadModbusList(db.LoadListRequest) returns (db.LoadListResponse);
  // 保存Modbus寄存器
  rpc SaveModbusRegister(SaveModbusRegisterRequest)
      returns (google.protobuf.Empty);
  // 查询Modbus寄存器
  rpc LoadModbusRegister(LoadModbusRegisterRequest) returns (ModbusRegister);
  // 查询Modbus寄存器列表
  rpc LoadModbusRegisterList(LoadModbusRegisterListRequest)
      returns (db.LoadListResponse);

  // Get DIs
  rpc ReadDiscreteInputs(GetCoilsRequest) returns (GetCoilsResponse);
  // Get DOs
  rpc ReadCoils(GetCoilsRequest) returns (GetCoilsResponse);
  // Set DO
  rpc WriteSingleCoil(SetCoilRequest) returns (google.protobuf.Empty);
  // Set DOs
  rpc WriteMultipleCoils(SetCoilsRequest) returns (google.protobuf.Empty);
  // Get AIs
  rpc ReadInputRegisters(GetRegistersRequest) returns (GetRegistersResponse);
  // Get AOs
  rpc ReadHoldingRegisters(GetRegistersRequest) returns (GetRegistersResponse);
  // Set AO
  rpc WriteSingleRegister(SetRegisterRequest) returns (google.protobuf.Empty);
  // Set AOs
  rpc WriteMultipleRegisters(SetRegistersRequest)
      returns (google.protobuf.Empty);
}
