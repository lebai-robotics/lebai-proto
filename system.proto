syntax = "proto3";

package lebai.system;

import "google/protobuf/empty.proto";

message HelloData {
  string data = 1;
}

message SystemInfo {
  string name = 1;
  string kernel_version = 2 [json_name = "kernel_version"];
  string os_version = 3 [json_name = "os_version"];
  string host_name = 4 [json_name = "host_name"];
  uint32 total_memory = 11 [json_name = "total_memory"];
  uint32 used_memory = 12 [json_name = "used_memory"];
  uint32 total_swap = 13 [json_name = "total_swap"];
  uint32 used_swap = 14 [json_name = "used_swap"];
  repeated string disks = 21;
  repeated string networks = 31;
  repeated string components = 41;
  repeated string processes = 51;
}

enum RobotModel {
  LM3 = 0;
  LM3_L1 = 1;
  LM3_J5L = 2;
  LM6J = 11;
}

message RobotInfo {
  // 设备名称（唯一），形如 `lebai-123456`。存在文件。
  string name = 1;
  // 设备型号，如 `LM6J`, `LM3`。存在文件。
  string model = 2;
  // 设备物理唯一标识（以太网 MAC 地址）。存在文件。初始值从 DS 获取。
  string mac = 3;
  // 机器人序列号/主机箱(main_box)序列号/控制箱序列号 `C`。存在文件。
  string robot = 4;
  // 手臂序列号/本机序列号 `R`。存在文件。
  string arm = 5;
  // 设备绑定的hash值
  string cup = 21;
}

enum FirmwarePartition {
  A = 0;
  B = 1;
  C = 2;
  UNKNOWN = 3;
}
message ComboardInfo {
  string sn = 1;
  string version = 2;
  FirmwarePartition partition = 3;
  uint32 di_num = 11 [json_name = "di_num"];
  uint32 do_num = 12 [json_name = "do_num"];
  uint32 ai_num = 13 [json_name = "ai_num"];
  uint32 ao_num = 14 [json_name = "ao_num"];
}
message JointInfo {
  string sn = 1;
  string version = 2;
  FirmwarePartition partition = 3;
}
message FlangeInfo {
  string sn = 1;
  string version = 2;
  FirmwarePartition partition = 3;
  uint32 di_num = 11 [json_name = "di_num"];
  uint32 do_num = 12 [json_name = "do_num"];
  uint32 ai_num = 13 [json_name = "ai_num"];
  uint32 ao_num = 14 [json_name = "ao_num"];
}
message LedInfo {
  string sn = 1;
  string version = 2;
  FirmwarePartition partition = 3;
}
message ExtraIoInfo {
  bool valid = 1;
  uint32 di_num = 11 [json_name = "di_num"];
  uint32 do_num = 12 [json_name = "do_num"];
  uint32 ai_num = 13 [json_name = "ai_num"];
  uint32 ao_num = 14 [json_name = "ao_num"];
}
message HardwareInfo {
  ComboardInfo comboard = 1;
  repeated JointInfo joints = 2;
  FlangeInfo flange = 3;
  LedInfo led = 4;
  ExtraIoInfo extra_io = 11 [json_name = "extra_io"];
}

message SoftwareInfo {
  string rc_version = 1 [json_name = "rc_version"];
}

// 系统控制相关服务
service SystemService {
  // Hello
  rpc Hello(HelloData) returns (HelloData);
  // 系统信息
  rpc GetSystemInfo(google.protobuf.Empty) returns (SystemInfo);
  // 机械臂信息
  rpc GetRobotInfo(google.protobuf.Empty) returns (RobotInfo);
  // 硬件信息
  rpc GetHardwareInfo(google.protobuf.Empty) returns (HardwareInfo);
  // 软件信息
  rpc GetSoftwareInfo(google.protobuf.Empty) returns (SoftwareInfo);
  // 关闭机器人电源（关机）
  rpc Powerdown(google.protobuf.Empty) returns (google.protobuf.Empty);
  // 启动机器人（上电）
  rpc StartSys(google.protobuf.Empty) returns (google.protobuf.Empty);
  // 停止机器人（下电）
  rpc StopSys(google.protobuf.Empty) returns (google.protobuf.Empty);
  // 停止机器人运动（不下电）
  rpc Stop(google.protobuf.Empty) returns (google.protobuf.Empty);
  // 急停
  rpc Estop(google.protobuf.Empty) returns (google.protobuf.Empty);
}
