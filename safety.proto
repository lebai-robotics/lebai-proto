syntax = "proto3";

package lebai.safety;

import "google/protobuf/empty.proto";

// 碰撞监测误差
message CollisionTorqueDiff {
  repeated double diffs = 1;
}
// 碰撞后执行操作
enum CollisionDetectorAction {
  // 碰撞后急停
  ESTOP = 0;
  // 碰撞后暂停
  PAUSE = 1;
  // 关闭碰撞监测
  NONE = 2;
}
message CollisionDetector {
  // 碰撞后执行操作
  CollisionDetectorAction action = 1;
  // action为PAUSE时生效，暂停时间(s)
  uint32 pause_time = 2 [json_name = "pause_time"];
  // 灵敏度[0~100]
  uint32 sensitivity = 3;
}

message JointLimit {
  double min_position = 1 [json_name = "min_position"];
  double max_position = 2 [json_name = "max_position"];
  double max_a = 3 [json_name = "max_a"];
  double max_v = 4 [json_name = "max_v"];
}
message JointsLimit {
  repeated JointLimit joints = 1;
}
message CartesianLimit {
  double max_a = 1 [json_name = "max_a"];
  double max_v = 2 [json_name = "max_v"];
  double eq_radius = 3 [json_name = "eq_radius"];
}

// 操作安全相关服务
service SafetyService {
  // 使能碰撞检测
  rpc EnableCollisionDetector(google.protobuf.Empty) returns (google.protobuf.Empty);
  // 临时禁用碰撞检测
  rpc DisableCollisionDetector(google.protobuf.Empty) returns (google.protobuf.Empty);
  // 设置碰撞监测误差
  rpc SetCollisionTorqueDiff(CollisionTorqueDiff)
      returns (google.protobuf.Empty);
  // 读取碰撞监测误差
  rpc GetCollisionTorqueDiff(google.protobuf.Empty)
      returns (CollisionTorqueDiff);
  // 设置碰撞监测
  rpc SetCollisionDetector(CollisionDetector) returns (google.protobuf.Empty);
  // 读取碰撞监测
  rpc GetCollisionDetector(google.protobuf.Empty) returns (CollisionDetector);
  // 使能限位检测
  rpc EnableLimit(google.protobuf.Empty) returns (google.protobuf.Empty);
  // 临时禁用限位检测
  rpc DisableLimit(google.protobuf.Empty) returns (google.protobuf.Empty);
  // 设置关节限位
  rpc SetJointsLimit(JointsLimit) returns (google.protobuf.Empty);
  // 读取关节限位
  rpc GetJointsLimit(google.protobuf.Empty) returns (JointsLimit);
  // 设置空间限位
  rpc SetCartLimit(CartesianLimit) returns (google.protobuf.Empty);
  // 读取空间限位
  rpc GetCartLimit(google.protobuf.Empty) returns (CartesianLimit);
}
