syntax = "proto3";

package lebai.claw;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "cmp.proto";

enum Address {
  // 目标开度
  AMPLITUDE = 0;
  // 目标力度
  FORCE = 1;
  // 上传电压数字
  VOLTAGE = 2;
  // 上传激光测距
  DISTANCE = 3;
  // 接收DO指令
  DO = 4;
  // 当前开度
  ACTUAL_AMPLITUDE = 5;
  // 当前力度（已弃用）
  ACTUAL_FORCE = 6;
  // 当前负载重量（已弃用）
  WEIGHT = 7;
  // 强制初始化手爪
  INIT = 8;
  // 手爪状态标识符
  FLAG = 9;
  // 手爪错误标识符
  ERROR = 10;
}

message Claw {
  // 力度
  double force = 1;
  // 开度
  double amplitude = 2;
  // 负载重量（已弃用）
  double weight = 3;
  // 开度是否稳定
  bool hold_on = 4 [json_name = "hold_on"];
}

message InitClawRequest {
  // 强制
  bool force = 1;
}
message SetClawRequest {
  // 力度
  google.protobuf.DoubleValue force = 1;
  // 开度
  google.protobuf.DoubleValue amplitude = 2;
}
message SetClawAoRequest {
  Address address = 1;
  double value = 2;
}
message GetClawAiRequest {
  Address address = 1;
}
message GetClawAiResponse {
  double value = 2;
}
message WaitClawAiRequest {
  Address address = 1;
  double value = 2;
  cmp.Relation relation = 3;
}

// 手爪相关服务
service ClawService {
  // 初始化手爪
  rpc InitClaw(InitClawRequest) returns (google.protobuf.Empty);
  // 设置手爪数据
  rpc SetClaw(SetClawRequest) returns (google.protobuf.Empty);
  // 获取手爪幅度是否稳定
  rpc GetClaw(google.protobuf.Empty) returns (Claw);
  // 设置手爪指定数据
  rpc SetClawAo(SetClawAoRequest) returns (google.protobuf.Empty);
  // 读取手爪指定数据
  rpc GetClawAi(GetClawAiRequest) returns (GetClawAiResponse);
  // 等待手爪指定数据
  rpc WaitClawAi(WaitClawAiRequest) returns (google.protobuf.Empty);
}
