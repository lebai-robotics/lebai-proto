syntax = "proto3";

package posture;

/// 关节空间 关节角
message JointPose {
  /// 关节度数（PI代表180°）
  repeated double joint = 1;
}

/// 关节空间参考系类型
enum JointFrameKind {
  /// 关节零位
  JointFrameKindBase = 0;
  /// 当前关节位置
  JointFrameKindCurrent = 1;
  /// 指定关节位置
  JointFrameKindJoint = 2;
}
/// 关节空间参考系
message JointFrame {
  JointFrameKind kind = 1;
  /// 此项不为空时: Base/Current无效
  JointPose joints = 2;
}

/// 姿态3*3矩阵
message RotationMatrix {
  /// 9个元素
  repeated double matrix = 1;
}
/// 欧拉角
message Euler {
  double roll = 1;
  double pitch = 2;
  double yaw = 3;
}
/// 四元组
message Quaternion {
  double w = 1;
  double i = 2;
  double j = 3;
  double k = 4;
}
/// 位姿类型
enum RotationKind {
  RotationKindEuler = 0;
  RotationKindQuaternion = 1;
  RotationKindMatrix = 2;
}
/// 姿态
message Rotation {
  RotationKind kind = 1;
  /// JSON
  string data = 2;
}

/// 位置
message Position {
  double x = 1;
  double y = 2;
  double z = 3;
}

/// 笛卡尔空间 位姿
message CartesianPose {
  Position position = 1;
  Rotation rotation = 2;
}

/// 笛卡尔空间 位姿4*4矩阵
message CartesianMatrix {
  /// 16个元素
  repeated double matrix = 1;
}

/// 笛卡尔空间参考系类型
enum CartFrameKind {
  /// 基座
  CartFrameKindBase = 0;
  /// 法兰平面
  CartFrameKindFlange = 1;
  /// TCP
  CartFrameKindTcp = 2;
  /// 点特征
  CartFrameKindPoint = 3;
}
/// 笛卡尔空间参考系
message CartFrame {
  CartFrameKind kind = 1;
  /// 此项不为空时: Base无效; Flange/Tcp仅使用rotation
  CartesianPose point = 2;
}

/// 机器人空间类型
enum RoseKind {
  PoseKindJoint = 0;
  PoseKindCart = 1;
}
/// 机器人空间
message Pose {
  RoseKind kind = 1;
  /// JSON, 参考系, JointFrame/CartFrame
  string base = 2;
  /// JSON, 增量, JointPose/CartesianPose
  string delta = 3;
}
