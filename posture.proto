syntax = "proto3";

package posture;

/// 关节空间 关节角
message JointPose {
  /// 关节度数（PI代表180°）
  repeated double joint = 1;
}

/// 关节空间参考系
message JointFrame {
  /// 关节空间参考系类型
  enum Kind {
    /// 关节零位
    KindBase = 0;
    /// 当前关节位置
    KindCurrent = 1;
    /// 指定关节位置
    KindJoint = 2;
  }

  Kind kind = 1;
  /// 此项不为空时: Base/Current无效
  JointPose joints = 2;
}

/// 姿态3*3矩阵
message RotationMatrix {
  /// 9个元素
  repeated double matrix = 1;
}
/// 欧拉角
message Euler {
  double roll = 1;
  double pitch = 2;
  double yaw = 3;
}
/// 四元组
message Quaternion {
  double w = 1;
  double i = 2;
  double j = 3;
  double k = 4;
}
/// 枚举 姿态
message Rotation {
  Euler euler = 10;
  Quaternion quaternion = 11;
  RotationMatrix matrix = 12;
}
/// 位置
message Position {
  double x = 1;
  double y = 2;
  double z = 3;
}

/// 笛卡尔空间 位姿
message CartesianPose {
  Position position = 1;
  Rotation rotation = 2;
}

/// 笛卡尔空间 位姿4*4矩阵
message CartesianMatrix {
  /// 16个元素
  repeated double matrix = 1;
}

/// 笛卡尔空间参考系
message CartesianFrame {
  /// 笛卡尔空间参考系类型
  enum Kind {
    /// 基座
    KindBase = 0;
    /// 法兰平面
    KindFlange = 1;
    /// TCP
    KindTcp = 2;
    /// 点特征
    KindPoint = 3;
  }

  Kind kind = 1;
  /// 此项不为空时: Base无效; Flange/Tcp仅使用rotation
  CartesianPose point = 2;
}

/// 机器人关节空间
message JointTargetPose {
  /// 参考系
  JointFrame base = 1;
  /// 增量
  JointPose delta = 2;
}
/// 机器人笛卡尔空间
message CartesianTargetPose {
  /// 参考系
  CartesianFrame base = 1;
  /// 增量
  CartesianPose delta = 2;
}
/// 枚举 机器人空间
message Pose {
  JointTargetPose joint = 1;
  CartesianTargetPose cart = 2;
}
