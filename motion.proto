syntax = "proto3";

package lebai.motion;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "db.proto";
import "posture.proto";

message MotionIndex {
  uint32 id = 1;
}

enum MotionState {
  WAIT = 0;
  RUNNING = 1;
  FINISHED = 2;
}
message GetMotionStateResponse {
  MotionState state = 1;
}

message MoveParam {
  double velocity = 2;
  double acc = 3;
  double time = 4;
  double radius = 5;
}
message MoveRequest {
  posture.Pose pose = 1;
  MoveParam param = 11;
}
message MovecRequest {
  posture.Pose pose_via = 1 [json_name = "pose_via"];
  posture.Pose pose = 2;
  double rad = 3;
  MoveParam param = 11;
}

message SpeedParam {
  double acc = 3;
  double time = 4;
  bool constrained = 6;
}
message SpeedJRequest {
  posture.JointPose speed = 1;
  SpeedParam param = 11;
}
message SpeedLRequest {
  posture.CartesianPose speed = 1;
  SpeedParam param = 11;
  // 参考系方向
  posture.CartesianFrame frame = 21;
}

message JointMove {
  double pose = 1;
  google.protobuf.DoubleValue velocity = 2;
  google.protobuf.DoubleValue acc = 3;
}
enum PvatKind {
  PT = 0;
  PVT = 1;
  PVAT = 2;
}
message MovePvatRequest {
  repeated JointMove joints = 10;
  // 执行时间(0.01秒的倍数)
  double duration = 11;
}

message Trajectory {
  PvatKind kind = 1;
  repeated MovePvatRequest data = 11;
}
message SaveTrajectoryRequest {
  string name = 1;
  Trajectory data = 2;
  string dir = 11;
}
message StartRecordTrajectoryRequest {
  PvatKind kind = 1;
  // 采样周期(0.01秒的倍数)
  double duration = 11;
}
message EndRecordTrajectoryRequest {
  string name = 1;
  string dir = 11;
}
message MoveTrajectoryRequest {
  string name = 1;
  string dir = 11;
}

message Wrench {
  // 受力大小
  posture.Position force = 1;
  // 扭矩大小
  posture.Position torque = 2;
}
enum ForceSensor {
  // 禁用外力传感器
  DISABLE = 0;
  // 内部瞬时算法估算
  INSTANTANEOUS = 1;
  // 内部连续算法估算
  CONTINUOUS = 2;
  // 一维重力传感器
  WEIGHT1 = 11;
}
message SetForceSensorRequest {
  ForceSensor sensor = 1;
}
message StartForceModeRequest {
  // 限速
  posture.CartesianPose limit = 1;
  // 控制力
  Wrench wrench = 2;
}
message ForceModeParam {
  // 启动力阈值
  double threshold = 1;
  // 阻尼系数
  double damping = 2;
  // 物体重量
  double mass = 3;
}
message SetForceModeParamRequest {
  // 启动力阈值
  google.protobuf.DoubleValue threshold = 1;
  // 阻尼系数
  google.protobuf.DoubleValue damping = 2;
  // 物体重量
  google.protobuf.DoubleValue mass = 3;
}

// 机器人运动相关服务
service MotionService {
  // 停止所有运动
  rpc StopMove(google.protobuf.Empty) returns (google.protobuf.Empty);
  // 跳过当前运动(已弃用)
  rpc SkipMove(google.protobuf.Empty) returns (google.protobuf.Empty);
  // 等待指定运动结束(特殊地, 0为等待全部运动)
  rpc WaitMove(MotionIndex) returns (google.protobuf.Empty);
  // 查询当前正在运行的MotionId(特殊地, 无运动时返回上次MotionId)
  rpc GetRunningMotion(google.protobuf.Empty) returns (MotionIndex);
  // 查询MotionId的运动状态
  rpc GetMotionState(MotionIndex) returns (GetMotionStateResponse);

  // 关节空间跟随运动
  rpc TowardJoint(MoveRequest) returns (MotionIndex);
  // 关节空间运动
  rpc MoveJoint(MoveRequest) returns (MotionIndex);
  // 直线运动
  rpc MoveLinear(MoveRequest) returns (MotionIndex);
  // 圆形运动
  rpc MoveCircular(MovecRequest) returns (MotionIndex);
  // 关节空间运动
  rpc MovePvat(MovePvatRequest) returns (google.protobuf.Empty);

  // 关节匀速运动
  rpc SpeedJoint(SpeedJRequest) returns (MotionIndex);
  // 沿直线匀速运动
  rpc SpeedLinear(SpeedLRequest) returns (MotionIndex);

  // 保存/修改/删除负载
  rpc SaveTrajectory(SaveTrajectoryRequest) returns (google.protobuf.Empty);
  // 查询负载
  rpc LoadTrajectory(db.LoadRequest) returns (Trajectory);
  // 查询负载列表
  rpc LoadTrajectoryList(db.LoadListRequest) returns (db.LoadListResponse);
  // 开始记录轨迹
  rpc StartRecordTrajectory(StartRecordTrajectoryRequest)
      returns (google.protobuf.Empty);
  // 结束记录轨迹
  rpc EndRecordTrajectory(EndRecordTrajectoryRequest)
      returns (google.protobuf.Empty);
  // 运行轨迹
  rpc MoveTrajectory(Trajectory) returns (MotionIndex);

  // 进入示教模式
  rpc StartTeachMode(google.protobuf.Empty) returns (google.protobuf.Empty);
  // 退出示教模式
  rpc EndTeachMode(google.protobuf.Empty) returns (google.protobuf.Empty);

  // 设置末端受力
  rpc SetTcpForce(Wrench) returns (google.protobuf.Empty);
  // 读取末端受力
  rpc GetTcpForce(google.protobuf.Empty) returns (Wrench);
  // 设置力控传感器选型
  rpc SetForceModeSensor(SetForceSensorRequest) returns (google.protobuf.Empty);
  // 设置力控参数
  rpc SetForceModeParam(SetForceModeParamRequest)
      returns (google.protobuf.Empty);
  // 进入力控模式
  rpc StartForceMode(StartForceModeRequest) returns (google.protobuf.Empty);
  // 退出力控模式
  rpc EndForceMode(google.protobuf.Empty) returns (google.protobuf.Empty);
}
