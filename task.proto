syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package lebai.task;

// 任务运行状态
enum TaskState {
  // 等待启动运行
  WAIT = 0;
  // 运行中
  RUNNING = 1;
  // 已暂停
  PAUSE = 2;
  // 运行成功
  SUCCESS = 3;
  /// 用户主动停止
  INTERRUPT = 4;
  /// 运行失败
  FAIL = 5;
  /// 开始运行，已弃用
  BEGIN = 11;
  /// 任务停止中
  INTERRUPTING = 14;
}

message TaskId {
  uint32 id = 1;
}

message Task {
  uint32 id = 1;
  // 代码高亮块ID
  string block_id = 10 [json_name = "block_id"];
  // 事件ID，已弃用
  uint32 event_id = 11 [json_name = "event_id"];
  // 任务运行状态
  TaskState state = 12;
  //已完成的循环次数
  uint32 loop_count = 13 [json_name = "loop_count"];
  //循环次数，默认为1。为0表示无限循环
  uint32 loop_to = 14 [json_name = "loop_to"];
  //是否为获得手臂控制权的主任务
  bool is_main = 15 [json_name = "is_main"];
  //是否为仿真模式
  bool is_simu = 16 [json_name = "is_simu"];
  /// 输出
  string stdout = 17;
  // 启动运行时间
  google.protobuf.Timestamp started_at = 18 [json_name = "started_at"];
  // 结束运行时间
  google.protobuf.Timestamp ended_at = 19 [json_name = "ended_at"];
  // 暂停运行时间
  google.protobuf.Timestamp pause_at = 20 [json_name = "pause_at"];
  /// 之前总共暂停用时ms，不包括本次暂停
  uint32 pre_pause = 21 [json_name = "pre_pause"];
  /// 运行该任务时原始的场景记录
  string record = 22;
}

message TaskIds {
  repeated uint32 ids = 1;
}

message Tasks {
  repeated Task tasks = 1;
}

message TaskStdout {
  bool done = 1;
  string stdout = 2;
}

message PauseRequest {
  // 任务ID
  uint32 id = 1;
  // 暂停时间
  uint64 time = 11;
  // 等待
  bool wait = 12;
}

/// 任务相关服务
service TaskService {
  // 查询任务
  rpc LoadTask(TaskId) returns (Task);
  // 查询任务列表
  rpc LoadTaskList(google.protobuf.Empty) returns (TaskIds);
  // 查询运行中的任务列表
  rpc LoadRunningTasks(google.protobuf.Empty) returns (Tasks);
  // 获取任务输出
  rpc GetTaskStdout(TaskId) returns (TaskStdout);
  // 订阅任务输出流
  rpc SubTaskStdout(TaskId) returns (stream TaskStdout);
  /// 暂停任务与运动
  rpc PauseTask(PauseRequest) returns (google.protobuf.Empty);
  /// 恢复任务与运动
  rpc ResumeTask(TaskId) returns (google.protobuf.Empty);
  /// 取消任务与运动
  rpc CancelTask(TaskId) returns (google.protobuf.Empty);
}
