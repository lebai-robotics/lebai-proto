syntax = "proto3";

package lebai.status;

import "google/protobuf/empty.proto";

// 机器人状态
enum RobotState {
  // 已断开连接
  DISCONNECTED = 0;
  // 急停停止状态
  E_STOP = 1;
  // 启动中
  BOOTING = 2;
  // 电源关闭
  ROBOT_OFF = 3;
  // 电源开启
  ROBOT_ON = 4;
  // 空闲中
  IDLE = 5;
  // 已暂停
  PAUSED = 6;
  // 机器人运动中
  MOVING = 7;
  // 更新固件中
  UPDATING = 8;
  // 启动中
  STARTING = 9;
  // 停止中
  STOPPING = 10;
  // 示教中
  TEACHING = 11;
  // 普通停止
  STOP = 12;
  // 微调中
  FINETUNING = 13;
}

message RobotData {
  RobotState robot_state = 1 [json_name = "robot_state"];
  repeated double actual_joint = 2 [json_name = "actual_joint"];
  repeated double actual_pose = 3 [json_name = "actual_pose"];
  repeated double actual_vel = 4 [json_name = "actual_vel"];
  repeated double actual_acc = 5 [json_name = "actual_acc"];
  repeated double actual_torque = 6 [json_name = "actual_torque"];
  double flange_current = 7 [json_name = "flange_current"];
  repeated double joint_current = 8 [json_name = "joint_current"];
  repeated double target_joint = 9 [json_name = "target_joint"];
  repeated double target_pose = 10 [json_name = "target_pose"];
  repeated double target_vel = 11 [json_name = "target_vel"];
  repeated double target_acc = 12 [json_name = "target_acc"];
  repeated double target_torque = 13 [json_name = "target_torque"];
  repeated double temp = 14;
}

message SubRobotDataRequest {
  // 订阅的字段
  repeated string keys = 1;
  // 保证每次推送至少间隔interval时间(ms)
  uint64 interval_min = 11 [json_name = "interval_min"];
  // 保证interval时间(ms)内至少推送1次
  uint64 interval_max = 12 [json_name = "interval_max"];
}
// 机器人状态相关服务
service StatusService {
  // 获取机器人状态
  rpc GetRobotData(google.protobuf.Empty) returns (RobotData);
  // 订阅机器人状态
  rpc SubRobotData(SubRobotDataRequest) returns (stream RobotData);
}
