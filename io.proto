syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "sql.proto";

package lebai.io;

// IO设备类型
enum IoDeviceKind {
  // 机箱IO
  ROBOT = 0;
  // 法兰IO
  FLANGE = 1;
  // 拓展IO
  EXTRA = 2;
  // 法兰ModBus
  MODBUS_FLANGE = 3;
  /// ModBus RTU
  MODBUS_RTU = 4;
  /// ModBus TCP
  MODBUS_TCP = 5;
}

// IO引脚类型
enum IoPinKind {
  DI = 0;
  DO = 1;
  AI = 2;
  AO = 3;
}

// IO引脚模型
message IoPinModel {
  uint32 id = 1;
  sql.DataStatus status = 2;
  uint32 top = 3;
  uint32 user_id = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  uint32 device_id = 8;

  // 名称
  string name = 11;
  IoPinKind kind = 12;
  // 引脚号 或 ModBus内存地址
  uint32 address = 13;

  // 使能
  bool enabled = 21;
  // 使能按键功能(仅DI可用)
  bool is_button = 22;
  // 轮询更新间隔(毫秒) 0为不自动更新 建议大于70
  uint32 interval = 23;
  // 比较精度（小数点后若干位），默认为小数点后 5 位
  uint32 precision = 24;
  // 原始值
  uint32 value = 25;
}
message IoPinModelFields {
  /// 有效字段
  repeated string mark = 1;
  IoPinModel model = 2;
}

message AddressOrName {
  oneof index {
    uint32 address = 1;
    string name = 2;
  }
}

message IoPinSaveRequest {
  sql.Ids ids = 1;
  IoPinModelFields fields = 2;
}

message IoPinListRequest {
  sql.ListFilter filter = 1;
  IoPinModelFields exact = 2;
}

message IoPinListResponse {
  repeated IoPinModel list = 1;
  sql.Pagination pager = 2;
}

// IO设备模型
message IoDeviceModel {
  uint32 id = 1;
  sql.DataStatus status = 2;
  uint32 top = 3;
  uint32 user_id = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;

  // 名称
  string name = 11;
  // 类型
  IoDeviceKind kind = 12;
  /// IP地址 或 串口地址
  string address = 13;
  /// TCP端口号 或 串口波特率
  uint32 port = 14;
  /// ModBus从机地址
  uint32 slave_id = 15;
  // 使能
  bool enabled = 21;
  // 在线
  bool online = 22;
  uint32 di_num = 31;
  uint32 do_num = 32;
  uint32 ai_num = 33;
  uint32 ao_num = 34;
}
message IoDeviceModelFields {
  /// 有效字段
  repeated string mark = 1;
  IoDeviceModel model = 2;
}

message IoDeviceSaveRequest {
  sql.Ids ids = 1;
  IoDeviceModelFields fields = 2;
}

message IoDeviceListRequest {
  sql.ListFilter filter = 1;
  IoDeviceModelFields exact = 2;
}

message IoDeviceListResponse {
  repeated IoDeviceModel list = 1;
  sql.Pagination pager = 2;
}

message SetIoPinRequest {
  AddressOrName pin = 1;
  uint32 value = 2;
  sql.IdOrKey device = 3;
}
message SetIoPinsRequest {
  AddressOrName pin = 1;
  repeated uint32 values = 2;
  sql.IdOrKey device = 3;
}
message WaitIoPinRequest {
  AddressOrName pin = 1;
  uint32 value = 2;
  string relation = 3;
  sql.IdOrKey device = 4;
}
message GetIoPinRequest {
  AddressOrName pin = 1;
  sql.IdOrKey device = 3;
}
message GetIoPinResponse {
  uint32 value = 1;
}
message GetIoPinsRequest {
  AddressOrName pin = 1;
  uint32 count = 2;
  sql.IdOrKey device = 3;
}
message GetIoPinsResponse {
  repeated uint32 values = 1;
}

/// IO相关服务
service IoService {
  // 保存IO设备
  rpc SaveIoDevice(IoDeviceSaveRequest) returns (IoDeviceModel);
  // 查询IO设备
  rpc LoadIoDevice(sql.IndexRequest) returns (IoDeviceModel);
  // 查询IO设备列表
  rpc LoadIoDeviceList(IoDeviceListRequest) returns (IoDeviceListResponse);
  // 保存IO Pin
  rpc SaveIoPin(IoPinSaveRequest) returns (IoPinModel);
  // 查询IO Pin
  rpc LoadIoPin(sql.IndexRequest) returns (IoPinModel);
  // 查询IO Pin列表
  rpc LoadIoPinList(IoPinListRequest) returns (IoPinListResponse);

  rpc GetDi(GetIoPinRequest) returns (GetIoPinResponse);
  rpc GetDis(GetIoPinsRequest) returns (GetIoPinsResponse);
  rpc GetDo(GetIoPinRequest) returns (GetIoPinResponse);
  rpc GetDos(GetIoPinsRequest) returns (GetIoPinsResponse);
  rpc SetDo(SetIoPinRequest) returns (GetIoPinResponse);
  rpc SetDos(SetIoPinsRequest) returns (GetIoPinsResponse);
  rpc GetAi(GetIoPinRequest) returns (GetIoPinResponse);
  rpc GetAis(GetIoPinsRequest) returns (GetIoPinsResponse);
  rpc GetAo(GetIoPinRequest) returns (GetIoPinResponse);
  rpc GetAos(GetIoPinsRequest) returns (GetIoPinsResponse);
  rpc SetAo(SetIoPinRequest) returns (GetIoPinResponse);
  rpc SetAos(SetIoPinsRequest) returns (GetIoPinsResponse);
}
